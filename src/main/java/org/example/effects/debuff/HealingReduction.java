package org.example.effects.debuff;

import lombok.Getter;
import org.example.effects.Effect;
import org.example.models.Character;
import org.example.utils.Utils;  // Import the Utils class

@Getter
public class HealingReduction extends Effect {
    private final double reductionMultiplier;

    public HealingReduction(int duration, double reductionMultiplier) {
        super(duration);
        this.reductionMultiplier = reductionMultiplier;
    }

    @Override
    public void apply(Character target) {
        target.setHealingMultiplier(reductionMultiplier);
        Utils.delayedPrint(String.format("üö´ %s –ø–æ–¥ —ç—Ñ—Ñ–µ–∫—Ç–æ–º '–ê–Ω—Ç–∏—Ö–∏–ª'! –õ–µ—á–µ–Ω–∏–µ —Å–Ω–∏–∂–µ–Ω–æ –Ω–∞ %.0f%% (%d —Ö–æ–¥–æ–≤).",
                target.getName(), (1 - reductionMultiplier) * 100, getDuration()));
    }

    @Override
    public void remove(Character target) {
        target.setHealingMultiplier(1.0);
        Utils.delayedPrint(String.format("‚úÖ %s –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥ —ç—Ñ—Ñ–µ–∫—Ç–æ–º '–ê–Ω—Ç–∏—Ö–∏–ª'.", target.getName()));
    }
}
