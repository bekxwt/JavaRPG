package org.example.effects.debuff;

import org.example.effects.Effect;
import org.example.models.Character;
import org.example.utils.Utils;  // Import the Utils class

public class MagicResistanceDown extends Effect {
    private final int resistanceReduction;

    public MagicResistanceDown(int duration, int resistanceReduction) {
        super(duration);
        this.resistanceReduction = resistanceReduction;
    }

    @Override
    public void apply(Character target) {
        target.getStats().decreaseMagicResistance(resistanceReduction);
        Utils.delayedPrint(String.format("üîµ %s –ø–æ–ª—É—á–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç '–°–Ω–∏–∂–µ–Ω–∏–µ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è' (-%d) –Ω–∞ %d —Ö–æ–¥–æ–≤!",
                target.getName(), resistanceReduction, getDuration()));
    }

    @Override
    public void remove(Character target) {
        target.getStats().increaseMagicResistance(resistanceReduction);
        Utils.delayedPrint(String.format("üõ°Ô∏è –≠—Ñ—Ñ–µ–∫—Ç '–°–Ω–∏–∂–µ–Ω–∏–µ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è' –Ω–∞ %s –∏—Å—á–µ–∑! –ú–∞–≥. —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.",
                target.getName()));
    }
}
